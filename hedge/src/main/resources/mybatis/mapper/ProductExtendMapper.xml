<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.puyitou.fundmanager.hedge.mapper.ProductExtendMapper">
  <resultMap id="BaseResultMap" type="com.puyitou.fundmanager.hedge.model.product.ProductExtend">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="record_number" jdbcType="VARCHAR" property="recordNumber" />
    <result column="ranking" jdbcType="INTEGER" property="ranking" />
    <result column="ranking_priority" jdbcType="INTEGER" property="rankingPriority" />
    <result column="ranking_posterior" jdbcType="INTEGER" property="rankingPosterior" />
    <result column="profit_distribution" jdbcType="INTEGER" property="profitDistribution" />
    <result column="custodian" jdbcType="VARCHAR" property="custodian" />
    <result column="outsourcing" jdbcType="VARCHAR" property="outsourcing" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_user" jdbcType="VARCHAR" property="bankUser" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="large_bank_account" jdbcType="VARCHAR" property="largeBankAccount" />
    <result column="risk_level_manager" jdbcType="INTEGER" property="riskLevelManager" />
    <result column="risk_level_sell" jdbcType="INTEGER" property="riskLevelSell" />
    <result column="pay_comment" jdbcType="VARCHAR" property="payComment" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="sell_mode" jdbcType="VARCHAR" property="sellMode" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, product_id, record_number, ranking, ranking_priority, ranking_posterior, profit_distribution, 
    custodian, outsourcing, bank_name, bank_user, bank_account, large_bank_account, risk_level_manager, 
    risk_level_sell, pay_comment, comment, sell_mode, create_time, update_time, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product_extend
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product_extend
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtendExample">
    delete from product_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtend">
    insert into product_extend (id, product_id, record_number, 
      ranking, ranking_priority, ranking_posterior, 
      profit_distribution, custodian, outsourcing, 
      bank_name, bank_user, bank_account, 
      large_bank_account, risk_level_manager, risk_level_sell, 
      pay_comment, comment, sell_mode, 
      create_time, update_time, delete_time
      )
    values (#{id,jdbcType=BIGINT}, #{productId,jdbcType=VARCHAR}, #{recordNumber,jdbcType=VARCHAR}, 
      #{ranking,jdbcType=INTEGER}, #{rankingPriority,jdbcType=INTEGER}, #{rankingPosterior,jdbcType=INTEGER}, 
      #{profitDistribution,jdbcType=INTEGER}, #{custodian,jdbcType=VARCHAR}, #{outsourcing,jdbcType=VARCHAR}, 
      #{bankName,jdbcType=VARCHAR}, #{bankUser,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{largeBankAccount,jdbcType=VARCHAR}, #{riskLevelManager,jdbcType=INTEGER}, #{riskLevelSell,jdbcType=INTEGER}, 
      #{payComment,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{sellMode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtend">
    insert into product_extend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="recordNumber != null">
        record_number,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="rankingPriority != null">
        ranking_priority,
      </if>
      <if test="rankingPosterior != null">
        ranking_posterior,
      </if>
      <if test="profitDistribution != null">
        profit_distribution,
      </if>
      <if test="custodian != null">
        custodian,
      </if>
      <if test="outsourcing != null">
        outsourcing,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankUser != null">
        bank_user,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="largeBankAccount != null">
        large_bank_account,
      </if>
      <if test="riskLevelManager != null">
        risk_level_manager,
      </if>
      <if test="riskLevelSell != null">
        risk_level_sell,
      </if>
      <if test="payComment != null">
        pay_comment,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="sellMode != null">
        sell_mode,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="recordNumber != null">
        #{recordNumber,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="rankingPriority != null">
        #{rankingPriority,jdbcType=INTEGER},
      </if>
      <if test="rankingPosterior != null">
        #{rankingPosterior,jdbcType=INTEGER},
      </if>
      <if test="profitDistribution != null">
        #{profitDistribution,jdbcType=INTEGER},
      </if>
      <if test="custodian != null">
        #{custodian,jdbcType=VARCHAR},
      </if>
      <if test="outsourcing != null">
        #{outsourcing,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankUser != null">
        #{bankUser,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="largeBankAccount != null">
        #{largeBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="riskLevelManager != null">
        #{riskLevelManager,jdbcType=INTEGER},
      </if>
      <if test="riskLevelSell != null">
        #{riskLevelSell,jdbcType=INTEGER},
      </if>
      <if test="payComment != null">
        #{payComment,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="sellMode != null">
        #{sellMode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtendExample" resultType="java.lang.Long">
    select count(*) from product_extend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_extend
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordNumber != null">
        record_number = #{record.recordNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=INTEGER},
      </if>
      <if test="record.rankingPriority != null">
        ranking_priority = #{record.rankingPriority,jdbcType=INTEGER},
      </if>
      <if test="record.rankingPosterior != null">
        ranking_posterior = #{record.rankingPosterior,jdbcType=INTEGER},
      </if>
      <if test="record.profitDistribution != null">
        profit_distribution = #{record.profitDistribution,jdbcType=INTEGER},
      </if>
      <if test="record.custodian != null">
        custodian = #{record.custodian,jdbcType=VARCHAR},
      </if>
      <if test="record.outsourcing != null">
        outsourcing = #{record.outsourcing,jdbcType=VARCHAR},
      </if>
      <if test="record.bankName != null">
        bank_name = #{record.bankName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankUser != null">
        bank_user = #{record.bankUser,jdbcType=VARCHAR},
      </if>
      <if test="record.bankAccount != null">
        bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.largeBankAccount != null">
        large_bank_account = #{record.largeBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.riskLevelManager != null">
        risk_level_manager = #{record.riskLevelManager,jdbcType=INTEGER},
      </if>
      <if test="record.riskLevelSell != null">
        risk_level_sell = #{record.riskLevelSell,jdbcType=INTEGER},
      </if>
      <if test="record.payComment != null">
        pay_comment = #{record.payComment,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.sellMode != null">
        sell_mode = #{record.sellMode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_extend
    set id = #{record.id,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=VARCHAR},
      record_number = #{record.recordNumber,jdbcType=VARCHAR},
      ranking = #{record.ranking,jdbcType=INTEGER},
      ranking_priority = #{record.rankingPriority,jdbcType=INTEGER},
      ranking_posterior = #{record.rankingPosterior,jdbcType=INTEGER},
      profit_distribution = #{record.profitDistribution,jdbcType=INTEGER},
      custodian = #{record.custodian,jdbcType=VARCHAR},
      outsourcing = #{record.outsourcing,jdbcType=VARCHAR},
      bank_name = #{record.bankName,jdbcType=VARCHAR},
      bank_user = #{record.bankUser,jdbcType=VARCHAR},
      bank_account = #{record.bankAccount,jdbcType=VARCHAR},
      large_bank_account = #{record.largeBankAccount,jdbcType=VARCHAR},
      risk_level_manager = #{record.riskLevelManager,jdbcType=INTEGER},
      risk_level_sell = #{record.riskLevelSell,jdbcType=INTEGER},
      pay_comment = #{record.payComment,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      sell_mode = #{record.sellMode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtend">
    update product_extend
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="recordNumber != null">
        record_number = #{recordNumber,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
      <if test="rankingPriority != null">
        ranking_priority = #{rankingPriority,jdbcType=INTEGER},
      </if>
      <if test="rankingPosterior != null">
        ranking_posterior = #{rankingPosterior,jdbcType=INTEGER},
      </if>
      <if test="profitDistribution != null">
        profit_distribution = #{profitDistribution,jdbcType=INTEGER},
      </if>
      <if test="custodian != null">
        custodian = #{custodian,jdbcType=VARCHAR},
      </if>
      <if test="outsourcing != null">
        outsourcing = #{outsourcing,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankUser != null">
        bank_user = #{bankUser,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="largeBankAccount != null">
        large_bank_account = #{largeBankAccount,jdbcType=VARCHAR},
      </if>
      <if test="riskLevelManager != null">
        risk_level_manager = #{riskLevelManager,jdbcType=INTEGER},
      </if>
      <if test="riskLevelSell != null">
        risk_level_sell = #{riskLevelSell,jdbcType=INTEGER},
      </if>
      <if test="payComment != null">
        pay_comment = #{payComment,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="sellMode != null">
        sell_mode = #{sellMode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExtend">
    update product_extend
    set product_id = #{productId,jdbcType=VARCHAR},
      record_number = #{recordNumber,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=INTEGER},
      ranking_priority = #{rankingPriority,jdbcType=INTEGER},
      ranking_posterior = #{rankingPosterior,jdbcType=INTEGER},
      profit_distribution = #{profitDistribution,jdbcType=INTEGER},
      custodian = #{custodian,jdbcType=VARCHAR},
      outsourcing = #{outsourcing,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_user = #{bankUser,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      large_bank_account = #{largeBankAccount,jdbcType=VARCHAR},
      risk_level_manager = #{riskLevelManager,jdbcType=INTEGER},
      risk_level_sell = #{riskLevelSell,jdbcType=INTEGER},
      pay_comment = #{payComment,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      sell_mode = #{sellMode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>