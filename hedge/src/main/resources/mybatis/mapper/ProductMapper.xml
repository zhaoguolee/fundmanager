<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.puyitou.fundmanager.hedge.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.puyitou.fundmanager.hedge.model.product.Product">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="special_supply" jdbcType="INTEGER" property="specialSupply" />
    <result column="product_type" jdbcType="INTEGER" property="productType" />
    <result column="operation_way" jdbcType="INTEGER" property="operationWay" />
    <result column="period_lock_up_type" jdbcType="INTEGER" property="periodLockUpType" />
    <result column="period_lock_up_time" jdbcType="INTEGER" property="periodLockUpTime" />
    <result column="period_float_type" jdbcType="INTEGER" property="periodFloatType" />
    <result column="period_float_time" jdbcType="INTEGER" property="periodFloatTime" />
    <result column="total_amount" jdbcType="BIGINT" property="totalAmount" />
    <result column="total_head_count" jdbcType="INTEGER" property="totalHeadCount" />
    <result column="can_redeem" jdbcType="INTEGER" property="canRedeem" />
    <result column="min_invest_amount" jdbcType="INTEGER" property="minInvestAmount" />
    <result column="increase_amount" jdbcType="INTEGER" property="increaseAmount" />
    <result column="establish_date" jdbcType="DATE" property="establishDate" />
    <result column="open_type" jdbcType="INTEGER" property="openType" />
    <result column="open_month" jdbcType="INTEGER" property="openMonth" />
    <result column="open_date" jdbcType="INTEGER" property="openDate" />
    <result column="open_can_purchase" jdbcType="INTEGER" property="openCanPurchase" />
    <result column="open_can_redeem" jdbcType="INTEGER" property="openCanRedeem" />
    <result column="open_raise_period" jdbcType="INTEGER" property="openRaisePeriod" />
    <result column="raise_finish_date" jdbcType="DATE" property="raiseFinishDate" />
    <result column="maturity_date" jdbcType="DATE" property="maturityDate" />
    <result column="pay_date" jdbcType="DATE" property="payDate" />
    <result column="accumulated_amount" jdbcType="INTEGER" property="accumulatedAmount" />
    <result column="accumulated_head_count" jdbcType="INTEGER" property="accumulatedHeadCount" />
    <result column="stock_amount" jdbcType="INTEGER" property="stockAmount" />
    <result column="stock_head_count" jdbcType="INTEGER" property="stockHeadCount" />
    <result column="homepage_show" jdbcType="INTEGER" property="homepageShow" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, special_supply, product_type, operation_way, period_lock_up_type, period_lock_up_time, 
    period_float_type, period_float_time, total_amount, total_head_count, can_redeem, 
    min_invest_amount, increase_amount, establish_date, open_type, open_month, open_date, 
    open_can_purchase, open_can_redeem, open_raise_period, raise_finish_date, maturity_date, 
    pay_date, accumulated_amount, accumulated_head_count, stock_amount, stock_head_count, 
    homepage_show, state, create_time, update_time, delete_time
  </sql>
  <select id="selectByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.puyitou.fundmanager.hedge.model.product.Product">
    insert into product (id, name, special_supply, 
      product_type, operation_way, period_lock_up_type, 
      period_lock_up_time, period_float_type, period_float_time, 
      total_amount, total_head_count, can_redeem, 
      min_invest_amount, increase_amount, establish_date, 
      open_type, open_month, open_date, 
      open_can_purchase, open_can_redeem, open_raise_period, 
      raise_finish_date, maturity_date, pay_date, 
      accumulated_amount, accumulated_head_count, 
      stock_amount, stock_head_count, 
      homepage_show, state, create_time, 
      update_time, delete_time)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{specialSupply,jdbcType=INTEGER}, 
      #{productType,jdbcType=INTEGER}, #{operationWay,jdbcType=INTEGER}, #{periodLockUpType,jdbcType=INTEGER}, 
      #{periodLockUpTime,jdbcType=INTEGER}, #{periodFloatType,jdbcType=INTEGER}, #{periodFloatTime,jdbcType=INTEGER}, 
      #{totalAmount,jdbcType=BIGINT}, #{totalHeadCount,jdbcType=INTEGER}, #{canRedeem,jdbcType=INTEGER}, 
      #{minInvestAmount,jdbcType=INTEGER}, #{increaseAmount,jdbcType=INTEGER}, #{establishDate,jdbcType=DATE}, 
      #{openType,jdbcType=INTEGER}, #{openMonth,jdbcType=INTEGER}, #{openDate,jdbcType=INTEGER}, 
      #{openCanPurchase,jdbcType=INTEGER}, #{openCanRedeem,jdbcType=INTEGER}, #{openRaisePeriod,jdbcType=INTEGER}, 
      #{raiseFinishDate,jdbcType=DATE}, #{maturityDate,jdbcType=DATE}, #{payDate,jdbcType=DATE}, 
      #{accumulatedAmount,jdbcType=INTEGER}, #{accumulatedHeadCount,jdbcType=INTEGER}, 
      #{stockAmount,jdbcType=INTEGER}, #{stockHeadCount,jdbcType=INTEGER}, 
      #{homepageShow,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.puyitou.fundmanager.hedge.model.product.Product">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="specialSupply != null">
        special_supply,
      </if>
      <if test="productType != null">
        product_type,
      </if>
      <if test="operationWay != null">
        operation_way,
      </if>
      <if test="periodLockUpType != null">
        period_lock_up_type,
      </if>
      <if test="periodLockUpTime != null">
        period_lock_up_time,
      </if>
      <if test="periodFloatType != null">
        period_float_type,
      </if>
      <if test="periodFloatTime != null">
        period_float_time,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="totalHeadCount != null">
        total_head_count,
      </if>
      <if test="canRedeem != null">
        can_redeem,
      </if>
      <if test="minInvestAmount != null">
        min_invest_amount,
      </if>
      <if test="increaseAmount != null">
        increase_amount,
      </if>
      <if test="establishDate != null">
        establish_date,
      </if>
      <if test="openType != null">
        open_type,
      </if>
      <if test="openMonth != null">
        open_month,
      </if>
      <if test="openDate != null">
        open_date,
      </if>
      <if test="openCanPurchase != null">
        open_can_purchase,
      </if>
      <if test="openCanRedeem != null">
        open_can_redeem,
      </if>
      <if test="openRaisePeriod != null">
        open_raise_period,
      </if>
      <if test="raiseFinishDate != null">
        raise_finish_date,
      </if>
      <if test="maturityDate != null">
        maturity_date,
      </if>
      <if test="payDate != null">
        pay_date,
      </if>
      <if test="accumulatedAmount != null">
        accumulated_amount,
      </if>
      <if test="accumulatedHeadCount != null">
        accumulated_head_count,
      </if>
      <if test="stockAmount != null">
        stock_amount,
      </if>
      <if test="stockHeadCount != null">
        stock_head_count,
      </if>
      <if test="homepageShow != null">
        homepage_show,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="specialSupply != null">
        #{specialSupply,jdbcType=INTEGER},
      </if>
      <if test="productType != null">
        #{productType,jdbcType=INTEGER},
      </if>
      <if test="operationWay != null">
        #{operationWay,jdbcType=INTEGER},
      </if>
      <if test="periodLockUpType != null">
        #{periodLockUpType,jdbcType=INTEGER},
      </if>
      <if test="periodLockUpTime != null">
        #{periodLockUpTime,jdbcType=INTEGER},
      </if>
      <if test="periodFloatType != null">
        #{periodFloatType,jdbcType=INTEGER},
      </if>
      <if test="periodFloatTime != null">
        #{periodFloatTime,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=BIGINT},
      </if>
      <if test="totalHeadCount != null">
        #{totalHeadCount,jdbcType=INTEGER},
      </if>
      <if test="canRedeem != null">
        #{canRedeem,jdbcType=INTEGER},
      </if>
      <if test="minInvestAmount != null">
        #{minInvestAmount,jdbcType=INTEGER},
      </if>
      <if test="increaseAmount != null">
        #{increaseAmount,jdbcType=INTEGER},
      </if>
      <if test="establishDate != null">
        #{establishDate,jdbcType=DATE},
      </if>
      <if test="openType != null">
        #{openType,jdbcType=INTEGER},
      </if>
      <if test="openMonth != null">
        #{openMonth,jdbcType=INTEGER},
      </if>
      <if test="openDate != null">
        #{openDate,jdbcType=INTEGER},
      </if>
      <if test="openCanPurchase != null">
        #{openCanPurchase,jdbcType=INTEGER},
      </if>
      <if test="openCanRedeem != null">
        #{openCanRedeem,jdbcType=INTEGER},
      </if>
      <if test="openRaisePeriod != null">
        #{openRaisePeriod,jdbcType=INTEGER},
      </if>
      <if test="raiseFinishDate != null">
        #{raiseFinishDate,jdbcType=DATE},
      </if>
      <if test="maturityDate != null">
        #{maturityDate,jdbcType=DATE},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=DATE},
      </if>
      <if test="accumulatedAmount != null">
        #{accumulatedAmount,jdbcType=INTEGER},
      </if>
      <if test="accumulatedHeadCount != null">
        #{accumulatedHeadCount,jdbcType=INTEGER},
      </if>
      <if test="stockAmount != null">
        #{stockAmount,jdbcType=INTEGER},
      </if>
      <if test="stockHeadCount != null">
        #{stockHeadCount,jdbcType=INTEGER},
      </if>
      <if test="homepageShow != null">
        #{homepageShow,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.puyitou.fundmanager.hedge.model.product.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.specialSupply != null">
        special_supply = #{record.specialSupply,jdbcType=INTEGER},
      </if>
      <if test="record.productType != null">
        product_type = #{record.productType,jdbcType=INTEGER},
      </if>
      <if test="record.operationWay != null">
        operation_way = #{record.operationWay,jdbcType=INTEGER},
      </if>
      <if test="record.periodLockUpType != null">
        period_lock_up_type = #{record.periodLockUpType,jdbcType=INTEGER},
      </if>
      <if test="record.periodLockUpTime != null">
        period_lock_up_time = #{record.periodLockUpTime,jdbcType=INTEGER},
      </if>
      <if test="record.periodFloatType != null">
        period_float_type = #{record.periodFloatType,jdbcType=INTEGER},
      </if>
      <if test="record.periodFloatTime != null">
        period_float_time = #{record.periodFloatTime,jdbcType=INTEGER},
      </if>
      <if test="record.totalAmount != null">
        total_amount = #{record.totalAmount,jdbcType=BIGINT},
      </if>
      <if test="record.totalHeadCount != null">
        total_head_count = #{record.totalHeadCount,jdbcType=INTEGER},
      </if>
      <if test="record.canRedeem != null">
        can_redeem = #{record.canRedeem,jdbcType=INTEGER},
      </if>
      <if test="record.minInvestAmount != null">
        min_invest_amount = #{record.minInvestAmount,jdbcType=INTEGER},
      </if>
      <if test="record.increaseAmount != null">
        increase_amount = #{record.increaseAmount,jdbcType=INTEGER},
      </if>
      <if test="record.establishDate != null">
        establish_date = #{record.establishDate,jdbcType=DATE},
      </if>
      <if test="record.openType != null">
        open_type = #{record.openType,jdbcType=INTEGER},
      </if>
      <if test="record.openMonth != null">
        open_month = #{record.openMonth,jdbcType=INTEGER},
      </if>
      <if test="record.openDate != null">
        open_date = #{record.openDate,jdbcType=INTEGER},
      </if>
      <if test="record.openCanPurchase != null">
        open_can_purchase = #{record.openCanPurchase,jdbcType=INTEGER},
      </if>
      <if test="record.openCanRedeem != null">
        open_can_redeem = #{record.openCanRedeem,jdbcType=INTEGER},
      </if>
      <if test="record.openRaisePeriod != null">
        open_raise_period = #{record.openRaisePeriod,jdbcType=INTEGER},
      </if>
      <if test="record.raiseFinishDate != null">
        raise_finish_date = #{record.raiseFinishDate,jdbcType=DATE},
      </if>
      <if test="record.maturityDate != null">
        maturity_date = #{record.maturityDate,jdbcType=DATE},
      </if>
      <if test="record.payDate != null">
        pay_date = #{record.payDate,jdbcType=DATE},
      </if>
      <if test="record.accumulatedAmount != null">
        accumulated_amount = #{record.accumulatedAmount,jdbcType=INTEGER},
      </if>
      <if test="record.accumulatedHeadCount != null">
        accumulated_head_count = #{record.accumulatedHeadCount,jdbcType=INTEGER},
      </if>
      <if test="record.stockAmount != null">
        stock_amount = #{record.stockAmount,jdbcType=INTEGER},
      </if>
      <if test="record.stockHeadCount != null">
        stock_head_count = #{record.stockHeadCount,jdbcType=INTEGER},
      </if>
      <if test="record.homepageShow != null">
        homepage_show = #{record.homepageShow,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      special_supply = #{record.specialSupply,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=INTEGER},
      operation_way = #{record.operationWay,jdbcType=INTEGER},
      period_lock_up_type = #{record.periodLockUpType,jdbcType=INTEGER},
      period_lock_up_time = #{record.periodLockUpTime,jdbcType=INTEGER},
      period_float_type = #{record.periodFloatType,jdbcType=INTEGER},
      period_float_time = #{record.periodFloatTime,jdbcType=INTEGER},
      total_amount = #{record.totalAmount,jdbcType=BIGINT},
      total_head_count = #{record.totalHeadCount,jdbcType=INTEGER},
      can_redeem = #{record.canRedeem,jdbcType=INTEGER},
      min_invest_amount = #{record.minInvestAmount,jdbcType=INTEGER},
      increase_amount = #{record.increaseAmount,jdbcType=INTEGER},
      establish_date = #{record.establishDate,jdbcType=DATE},
      open_type = #{record.openType,jdbcType=INTEGER},
      open_month = #{record.openMonth,jdbcType=INTEGER},
      open_date = #{record.openDate,jdbcType=INTEGER},
      open_can_purchase = #{record.openCanPurchase,jdbcType=INTEGER},
      open_can_redeem = #{record.openCanRedeem,jdbcType=INTEGER},
      open_raise_period = #{record.openRaisePeriod,jdbcType=INTEGER},
      raise_finish_date = #{record.raiseFinishDate,jdbcType=DATE},
      maturity_date = #{record.maturityDate,jdbcType=DATE},
      pay_date = #{record.payDate,jdbcType=DATE},
      accumulated_amount = #{record.accumulatedAmount,jdbcType=INTEGER},
      accumulated_head_count = #{record.accumulatedHeadCount,jdbcType=INTEGER},
      stock_amount = #{record.stockAmount,jdbcType=INTEGER},
      stock_head_count = #{record.stockHeadCount,jdbcType=INTEGER},
      homepage_show = #{record.homepageShow,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.puyitou.fundmanager.hedge.model.product.Product">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="specialSupply != null">
        special_supply = #{specialSupply,jdbcType=INTEGER},
      </if>
      <if test="productType != null">
        product_type = #{productType,jdbcType=INTEGER},
      </if>
      <if test="operationWay != null">
        operation_way = #{operationWay,jdbcType=INTEGER},
      </if>
      <if test="periodLockUpType != null">
        period_lock_up_type = #{periodLockUpType,jdbcType=INTEGER},
      </if>
      <if test="periodLockUpTime != null">
        period_lock_up_time = #{periodLockUpTime,jdbcType=INTEGER},
      </if>
      <if test="periodFloatType != null">
        period_float_type = #{periodFloatType,jdbcType=INTEGER},
      </if>
      <if test="periodFloatTime != null">
        period_float_time = #{periodFloatTime,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=BIGINT},
      </if>
      <if test="totalHeadCount != null">
        total_head_count = #{totalHeadCount,jdbcType=INTEGER},
      </if>
      <if test="canRedeem != null">
        can_redeem = #{canRedeem,jdbcType=INTEGER},
      </if>
      <if test="minInvestAmount != null">
        min_invest_amount = #{minInvestAmount,jdbcType=INTEGER},
      </if>
      <if test="increaseAmount != null">
        increase_amount = #{increaseAmount,jdbcType=INTEGER},
      </if>
      <if test="establishDate != null">
        establish_date = #{establishDate,jdbcType=DATE},
      </if>
      <if test="openType != null">
        open_type = #{openType,jdbcType=INTEGER},
      </if>
      <if test="openMonth != null">
        open_month = #{openMonth,jdbcType=INTEGER},
      </if>
      <if test="openDate != null">
        open_date = #{openDate,jdbcType=INTEGER},
      </if>
      <if test="openCanPurchase != null">
        open_can_purchase = #{openCanPurchase,jdbcType=INTEGER},
      </if>
      <if test="openCanRedeem != null">
        open_can_redeem = #{openCanRedeem,jdbcType=INTEGER},
      </if>
      <if test="openRaisePeriod != null">
        open_raise_period = #{openRaisePeriod,jdbcType=INTEGER},
      </if>
      <if test="raiseFinishDate != null">
        raise_finish_date = #{raiseFinishDate,jdbcType=DATE},
      </if>
      <if test="maturityDate != null">
        maturity_date = #{maturityDate,jdbcType=DATE},
      </if>
      <if test="payDate != null">
        pay_date = #{payDate,jdbcType=DATE},
      </if>
      <if test="accumulatedAmount != null">
        accumulated_amount = #{accumulatedAmount,jdbcType=INTEGER},
      </if>
      <if test="accumulatedHeadCount != null">
        accumulated_head_count = #{accumulatedHeadCount,jdbcType=INTEGER},
      </if>
      <if test="stockAmount != null">
        stock_amount = #{stockAmount,jdbcType=INTEGER},
      </if>
      <if test="stockHeadCount != null">
        stock_head_count = #{stockHeadCount,jdbcType=INTEGER},
      </if>
      <if test="homepageShow != null">
        homepage_show = #{homepageShow,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.puyitou.fundmanager.hedge.model.product.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      special_supply = #{specialSupply,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=INTEGER},
      operation_way = #{operationWay,jdbcType=INTEGER},
      period_lock_up_type = #{periodLockUpType,jdbcType=INTEGER},
      period_lock_up_time = #{periodLockUpTime,jdbcType=INTEGER},
      period_float_type = #{periodFloatType,jdbcType=INTEGER},
      period_float_time = #{periodFloatTime,jdbcType=INTEGER},
      total_amount = #{totalAmount,jdbcType=BIGINT},
      total_head_count = #{totalHeadCount,jdbcType=INTEGER},
      can_redeem = #{canRedeem,jdbcType=INTEGER},
      min_invest_amount = #{minInvestAmount,jdbcType=INTEGER},
      increase_amount = #{increaseAmount,jdbcType=INTEGER},
      establish_date = #{establishDate,jdbcType=DATE},
      open_type = #{openType,jdbcType=INTEGER},
      open_month = #{openMonth,jdbcType=INTEGER},
      open_date = #{openDate,jdbcType=INTEGER},
      open_can_purchase = #{openCanPurchase,jdbcType=INTEGER},
      open_can_redeem = #{openCanRedeem,jdbcType=INTEGER},
      open_raise_period = #{openRaisePeriod,jdbcType=INTEGER},
      raise_finish_date = #{raiseFinishDate,jdbcType=DATE},
      maturity_date = #{maturityDate,jdbcType=DATE},
      pay_date = #{payDate,jdbcType=DATE},
      accumulated_amount = #{accumulatedAmount,jdbcType=INTEGER},
      accumulated_head_count = #{accumulatedHeadCount,jdbcType=INTEGER},
      stock_amount = #{stockAmount,jdbcType=INTEGER},
      stock_head_count = #{stockHeadCount,jdbcType=INTEGER},
      homepage_show = #{homepageShow,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      delete_time = #{deleteTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  <!-- 产品发行列表查询 -->
  <select id="queryPageProductList" parameterType="java.util.Map" resultType="java.util.Map">
  
  SELECT
	pro.id AS productID,
  	ma.id AS managerId,
  	pro.`name` AS productName,
	ma.`name` AS managerName,
	pro.period_lock_up_time,
	pro.period_lock_up_type,
	case pro.period_lock_up_type
	when 0 THEN ''
  	WHEN 1 THEN '天'
  	WHEN 2 THEN '月'
  	WHEN 3 THEN '年'
  	ELSE '' END as lockName,
	pro.period_float_time,
	pro.period_float_type,
  	case pro.period_float_type
  	WHEN 1 THEN '天'
	WHEN 2 THEN '月'
  	WHEN 3 THEN '年'
  	ELSE '' END as floatName,
	pro.accumulated_amount,
  	pro.accumulated_head_count,
  	pro.stock_amount,
  	pro.stock_head_count,
  	pro.establish_date,
  	MIN(prp.raise_start_date) AS raise_start_date,
  	gra.maxBaseline,
  	gra.minBaseline,
  	pro.state
	FROM
	fm_hedge.product pro,
	fm_hedge.manager ma,
	fm_hedge.ref_manager_product ref,
  	fm_hedge.product_open prp,
  	(SELECT product_id,MAX(baseline) AS maxBaseline,MIN(baseline) AS minBaseline FROM fm_hedge.product_grade GROUP BY product_id) gra
	WHERE
	pro.id = ref.product_id
	AND ma.id = ref.manager_id
	AND pro.id = prp.product_id
	AND pro.id = gra.product_id
	<if test="managerId !=null and managerId !=''">
		and managerId = #{managerId}
	</if>
	<if test="productID !=null and productID !=''">
	   and productName like '%{productName}%'
	</if>
	<if test="state != null and state != ''">
	   and pro.state = #{state}
	</if>
	
	ORDER BY pro.establish_date DESC
  
  </select>
  
  
  
  
  
</mapper>